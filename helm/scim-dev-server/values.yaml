# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2024 Univention GmbH

---
global:
  # -- Container registry address.
  imageRegistry: "artifacts.software-univention.de"

  # -- Credentials to fetch images from private registry.
  # Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  #
  # imagePullSecrets:
  #   - "docker-registry"
  imagePullSecrets: []

  # -- Define an ImagePullPolicy.
  #
  # Ref.: https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
  #
  imagePullPolicy: "IfNotPresent"
  secrets:
    masterPassword: null

scimDevServer:
  image:
    registry: ""
    repository: "nubus-dev/images/scim-dev-server"
    imagePullPolicy: ""
    tag: "latest"
    # -- Define image sha256 as an alternative to `tag`
    sha256: null
  config:
    # -- Hostname of the SCIM server
    hostname: null

resources:
  requests:
    memory: "512Mi"
    cpu: "250m"
  limits:
    memory: "4Gi"
    cpu: "4"

podSecurityContext:
  # -- Enable security context.
  enabled: true
  # -- If specified, all processes of the container are also part of the supplementary group.
  fsGroup: 1000
  # -- Change ownership and permission of the volume before being exposed inside a Pod.
  fsGroupChangePolicy: "Always"
  # -- Allow binding to ports below 1024 without root access.
  sysctls:
    - name: "net.ipv4.ip_unprivileged_port_start"
      value: "1"

containerSecurityContext:
  # -- Enable security context.
  enabled: true
  privileged: false
  # -- Enable container privileged escalation.
  allowPrivilegeEscalation: false
  # -- Security capabilities for container.
  capabilities:
    drop:
      - "ALL"
  # Set Seccomp profile.
  seccompProfile:
    # -- Disallow custom Seccomp profile by setting it to RuntimeDefault.
    type: "RuntimeDefault"
  # -- Process user id.
  runAsUser: 1000
  # -- Process group id.
  runAsGroup: 1000
  # -- Mounts the container's root filesystem as read-only.
  readOnlyRootFilesystem: true
  # -- Run container as a user.
  runAsNonRoot: true

tolerations: []

# -- Array with extra environment variables to add to containers.
#
# extraEnvVars:
#   - name: FOO
#     value: "bar"
extraEnvVars: []

# -- Optionally specify an extra list of additional volumes.
extraVolumes: []

# -- Optionally specify an extra list of additional volumeMounts.
extraVolumeMounts: []

# Service account to use.
# Ref.: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  ## @param serviceAccount.automountServiceAccountToken Allows auto mount of ServiceAccountToken on the serviceAccount created
  ## Can be set to false if pods using this serviceAccount do not need to use K8s API
  ##
  automountServiceAccountToken: false
  # -- Additional custom labels for the ServiceAccount.
  labels: {}

service:
  annotations: {}
