# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2024 Univention GmbH


{{- if not (.Values.provisioningApi.auth.existingSecret).name }}
{{- /*
The password value is currently required in two places:

1. In the json needed to create the subscription with the provisioning-register-clients job.
2. As a plain password value in a secret that can be mounted by the client pod.
*/}}
{{- $name := default (include "common.names.fullname" .) .Values.provisioningApi.auth.username }}
{{- $scimConsumerSubscriptionPassword := include "nubus-common.secrets.passwords.manage"
  (dict
    "secret" (include "nubus-common.secrets.name" (dict "defaultNameSuffix" "svc-portal-server" "context" .))
    "key" "password"
    "username" $name
    "providedValues" (list "provisioningApi.auth.password")
    "context" .
  )
}}

---
kind: "Secret"
apiVersion: "v1"
metadata:
  name: {{ include "nubus-common.secrets.name" (dict "defaultNameSuffix" "provisioning" "context" .) | quote }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels:
    {{- include "common.labels.standard" ( dict "customLabels" .Values.additionalLabels "context" $ ) | nindent 4 }}
  annotations:
    {{- if (.Values.global.secrets).keep }}
    helm.sh/resource-policy: keep
    {{- end }}
    {{- if .Values.additionalAnnotations }}
      {{- include "common.tplvalues.render" ( dict "value" .Values.additionalAnnotations "context" . ) | nindent 4 }}
    {{- end }}
type: Opaque
stringData:
  registration: |
    {
      "name": {{ $name | quote }},
      "realms_topics":
        [
          {"realm": "udm", "topic": "users/user"}
          {{- if .Values.scimConsumer.config.groupSync }}
          , {"realm": "udm", "topic": "groups/group"}
          {{- end }}
        ],
      "request_prefill": {{ .Values.scimConsumer.config.prefill }},
      "password": {{ $scimConsumerSubscriptionPassword | quote }}
    }
  # TODO: No idea how to support a keyMapping here. :unamused:
  username: {{ $name | quote }}
  password: {{ $scimConsumerSubscriptionPassword | quote }}

{{- end }}
