# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2024 Univention GmbH
---
global:
  imageRegistry: "artifacts.software-univention.de"
  imagePullSecrets: []
  imagePullPolicy: "IfNotPresent"
  ingressClass: ""
  domain: ""
  certManagerIssuer: ""
  nubusDeployment: false

scimServer:
  image:
    registry: ""
    repository: "nubus-dev/images/scim-server"
    imagePullPolicy: ""
    tag: "latest"
    sha256: null
  waitForDependency:
    image:
      registry: ""
      repository: "nubus/images/wait-for-dependency"
      tag: "0.31.0"
      sha256: null

replicaCount: 1

config:
  host: "https://scim.example.test"
  apiPrefix: "/scim/v2"
  logLevel: "INFO"
  listenAddress: "0.0.0.0"
  port: 80
  corsOrigins: '["*"]'
  auth:
    enabled: true
    allowGroupDn: ""
  # -- External ID mapping configuration for SCIM filtering
  externalId:
    # -- UDM property to map to SCIM User externalId. If not set, externalID will not be mapped.
    # Example: "employeeNumber"
    userMapping: null
    # -- UDM property to map to SCIM Group externalId. If not set, externalID will not be mapped.
    # Example: "description"
    groupMapping: null

keycloak:
  connection:
    url: ""
    realm: ""

udm:
  connection:
    url: ""
  auth:
    username: "Administrator"
    password: null
    existingSecret:
      name: null
      keyMapping:
        password: null

# The clientId is required for authentication because only tokens from that client are considered valid
# There exists also another parameter to create a keycloak client if it is set, the clientId from here is used for the new client
# The secret is only needed for convenience to allow logging in in the swagger UI
oauth:
  clientId: "scim-api"
  auth:
    existingSecret:
      name: null
      keyMapping:
        clientSecret: null

resources:
  limits:
    memory: "4Gi"
    cpu: "4"

podSecurityContext:
  enabled: true
  fsGroup: 1000
  fsGroupChangePolicy: "Always"
  sysctls:
    - name: "net.ipv4.ip_unprivileged_port_start"
      value: "1"

containerSecurityContext:
  enabled: true
  privileged: false
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - "ALL"
  seccompProfile:
    type: "RuntimeDefault"
  runAsUser: 1000
  runAsGroup: 1000
  readOnlyRootFilesystem: true
  runAsNonRoot: true

probes:
  readiness:
    failureThreshold: 10
    initialDelaySeconds: 15
    periodSeconds: 20
    successThreshold: 1
    timeoutSeconds: 5
    tcpSocket:
      port: 80
  startup:
    initialDelaySeconds: 15
    failureThreshold: 10
    periodSeconds: 20
    successThreshold: 1
    timeoutSeconds: 5
    tcpSocket:
      port: 80
  liveness:
    failureThreshold: 10
    initialDelaySeconds: 15
    periodSeconds: 20
    successThreshold: 1
    timeoutSeconds: 5
    tcpSocket:
      port: 80

tolerations: []
extraEnvVars: []
extraVolumes: []
extraVolumeMounts: []

ingress:
  enabled: true
  host: ""
  certManager:
    enabled: true
    issuerRef:
      name: ""
      kind: "ClusterIssuer"
  ingressClassName: ""
  annotations: {}
  tls:
    enabled: true
    secretName: ""

service:
  annotations: {}

serviceAccount:
  create: true
  annotations: {}
  name: ""
  automountServiceAccountToken: false
  labels: {}

setup:
  enabled: true
  restartPolicy: "OnFailure"
  backoffLimit: 900
  ttlSecondsAfterFinished: 300
  image:
    registry: ""
    repository: "nubus/images/keycloak-bootstrap"
    tag: "0.8.0"
    sha256: null
    imagePullPolicy: ""
  keycloak:
    connection:
      host: ""
      port: ""
      baseUrl: ""
    auth:
      username: ""
      existingSecret:
        name: null
        keyMapping:
          password: null
  config:
    nubusBaseUrl: ""
    debug:
      enabled: false
      pauseBeforeScriptStart: 0
  user:
    create: false
    username: "scim-api"
    password: null
    group:
      create: false
      name: "scim-api-access"

additionalLabels: {}
additionalAnnotations: {}
