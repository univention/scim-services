# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2024 Univention GmbH

---
global:
  # -- Container registry address.
  imageRegistry: "artifacts.software-univention.de"

  # -- Credentials to fetch images from private registry.
  # Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  #
  # imagePullSecrets:
  #   - "docker-registry"
  imagePullSecrets: []

  # -- Define an ImagePullPolicy.
  #
  # Ref.: https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
  #
  imagePullPolicy: "IfNotPresent"

# -- Container image configuration
image:
  registry: ""
  repository: "nubus-dev/images/scim-server"
  imagePullPolicy: ""
  tag: "latest"
  # -- Define image sha256 as an alternative to `tag`
  sha256: null

replicaCount: 1

config:
  logLevel: "INFO"
  loggingConfig: null
  repeat: true
  repeatDelay: 300

# -- Source connection configuration that is not part of the main config file
sourceDirectory:
  auth:
    # -- The password used to authenticate with the source LDAP directory.
    # Either this value or an existing Secret has to be specified.
    password:
    existingSecret:
      # -- The name of an existing Secret to use for retrieving the password
      # to authenticate with the source LDAP directory.
      #
      # "udm.auth.password" will be ignored if this value is set.
      name: null
      keyMapping:
        # -- The key to retrieve the password from. Setting this value allows to use
        # a key with a different name.
        password: null

# -- UDM REST API connection configuration that is not part of the main config file
udm:
  auth:
    # -- The password used to authenticate with the UDM Rest API.
    # Either this value or an existing Secret has to be specified.
    password:
    existingSecret:
      # -- The name of an existing Secret to use for retrieving the password
      # to use with the UDM Rest API.
      #
      # "udm.auth.password" will be ignored if this value is set.
      name: null
      keyMapping:
        # -- The key to retrieve the password from. Setting this value allows to use
        # a key with a different name.
        password: null


resources:
  limits:
    memory: "4Gi"
    cpu: "4"

podSecurityContext:
  enabled: false

containerSecurityContext:
  enabled: false
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  privileged: false
  readOnlyRootFilesystem: true
  runAsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000
  seccompProfile:
    type: RuntimeDefault

# -- Optionally specify a secret to create (primarily intended to be used in development environments to provide custom certificates)
extraSecrets: []

# -- Array with extra environment variables to add to containers.
#
# extraEnvVars:
#   - name: FOO
#     value: "bar"
extraEnvVars: []

# -- Optionally specify an extra list of additional volumes.
extraVolumes: []

# -- Optionally specify an extra list of additional volumeMounts.
extraVolumeMounts: []

# Service account to use.
# Ref.: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  ## @param serviceAccount.automountServiceAccountToken Allows auto mount of ServiceAccountToken on the serviceAccount created
  ## Can be set to false if pods using this serviceAccount do not need to use K8s API
  ##
  automountServiceAccountToken: false
  # -- Additional custom labels for the ServiceAccount.
  labels: {}

...
