# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2024 Univention GmbH

---
global:
  # -- Container registry address.
  imageRegistry: "artifacts.software-univention.de"

  # -- Credentials to fetch images from private registry.
  # Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  #
  # imagePullSecrets:
  #   - "docker-registry"
  imagePullSecrets: []

  # -- Define an ImagePullPolicy.
  #
  # Ref.: https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
  #
  imagePullPolicy: "IfNotPresent"
  secrets:
    masterPassword: null

# -- Upstream Nubus Provisioning connection configuration
nubusProvisioning:
  connection:
    # -- The base URL the provisioning API is reachable at. (e.g. "http://provisioning-api")
    url: null
    # -- The maximum number of retries for acknowledging a message
    maxAcknowledgementRetries: 3
  auth:
    # -- Username of the nubus provisioning subscription / this consumer
    # For a given nubus deployment, all provisioning subscription names must be unique.
    username: null
    # -- The password used to authenticate with the Provisioning API.
    # Either this value or an existing Secret has to be specified.
    password: null
    existingSecret:
      # -- The name of an existing Secret to use for retrieving the password
      # to authenticate with the Provisionig API.
      #
      # "nubusProvisioning.auth.password" will be ignored if this value is set.
      name: null
      keyMapping:
        # -- The key to retrieve the password from. Setting this value allows to use
        # a key with a different name.
        password: null

# -- Downstream SCIM Service connection configuration
scimServer:
  connection:
    # -- The base URL the SCIM server is reachable at. (e.g. "http://scim-server")
    url: null
  auth:
    # -- Disable authentication with the SCIM Server for testing purposes
    enabled: true
    # -- URL to obtain an OIDC access token from the Identity Provider using the client-credentials-flow.
    oidcTokenUrl: null
    # -- Service account client ID (username)
    clientId: null
    # -- The password used to authenticate with the SCIM Server.
    # Either this value or an existing Secret has to be specified.
    password: null
    existingSecret:
      # -- The name of an existing Secret to use for retrieving the password
      # to authenticate with the SCIM Server.
      #
      # "scimServer.auth.password" will be ignored if this value is set.
      name: null
      keyMapping:
        # -- The key to retrieve the password from. Setting this value allows to use
        # a key with a different name.
        password: null

# -- Upstream LDAP server to resolve group member DN's
ldap:
  connection:
    # -- LDAP Server URI (e.g. "ldap://nubus-ldap-server")
    uri: null
  auth:
    bindDn: null
    existingSecret:
      # -- The name of an existing Secret to use for retrieving the password
      # to authenticate with the source LDAP directory.
      #
      # "udm.auth.password" will be ignored if this value is set.
      name: null
      keyMapping:
        # -- The key to retrieve the password from. Setting this value allows to use
        # a key with a different name.
        password: null

# -- Container image configuration
scimConsumer:
  image:
    registry: ""
    repository: "nubus-dev/images/scim-consumer"
    imagePullPolicy: ""
    tag: "latest"
    # -- Define image sha256 as an alternative to `tag`
    sha256: null
  config:
    logLevel: "INFO"
    # -- Toggle prefill for the provisioning subscription
    # If activated, the consumer will recieve a synthetic "create" event
    # for all existing objets in the Domain before recieving live events.
    prefill: true
    groupSync: true

resources:
  requests:
    memory: "512Mi"
    cpu: "250m"
  limits:
    memory: "4Gi"
    cpu: "4"

podSecurityContext:
  # -- Enable security context.
  enabled: true
  # -- If specified, all processes of the container are also part of the supplementary group.
  fsGroup: 1000
  # -- Change ownership and permission of the volume before being exposed inside a Pod.
  fsGroupChangePolicy: "Always"
  # -- Allow binding to ports below 1024 without root access.
  sysctls:
    - name: "net.ipv4.ip_unprivileged_port_start"
      value: "1"

containerSecurityContext:
  # -- Enable security context.
  enabled: true
  privileged: false
  # -- Enable container privileged escalation.
  allowPrivilegeEscalation: false
  # -- Security capabilities for container.
  capabilities:
    drop:
      - "ALL"
  # Set Seccomp profile.
  seccompProfile:
    # -- Disallow custom Seccomp profile by setting it to RuntimeDefault.
    type: "RuntimeDefault"
  # -- Process user id.
  runAsUser: 1000
  # -- Process group id.
  runAsGroup: 1000
  # -- Mounts the container's root filesystem as read-only.
  readOnlyRootFilesystem: true
  # -- Run container as a user.
  runAsNonRoot: true

tolerations: []

# -- Optionally specify a secret to create (primarily intended to be used in development environments to provide custom certificates)
extraSecrets: []

# -- Array with extra environment variables to add to containers.
#
# extraEnvVars:
#   - name: FOO
#     value: "bar"
extraEnvVars: []

# -- Optionally specify an extra list of additional volumes.
extraVolumes: []

# -- Optionally specify an extra list of additional volumeMounts.
extraVolumeMounts: []

# Service account to use.
# Ref.: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  ## @param serviceAccount.automountServiceAccountToken Allows auto mount of ServiceAccountToken on the serviceAccount created
  ## Can be set to false if pods using this serviceAccount do not need to use K8s API
  ##
  automountServiceAccountToken: false
  # -- Additional custom labels for the ServiceAccount.
  labels: {}
